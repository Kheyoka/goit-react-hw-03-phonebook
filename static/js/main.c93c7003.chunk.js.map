{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmitContact","reset","this","onSubmit","className","styles","form","htmlFor","label","type","onChange","id","input","button","Component","Filter","onChangeFilter","defaultProps","List","styled","ul","ListItem","li","StyledButton","Contact","onDeleteContactFor","onClick","ContactList","items","onDeleteContact","length","map","contact","key","App","contacts","filter","handleSubmitContact","contactToAdd","find","c","toLowerCase","alert","deleteContact","changeFilter","filteredContacts","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c93c7003.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'short-id';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmitContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmitContact({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n            name=\"name\"\n            className={styles.input}\n          />\n        </label>\n        <label htmlFor={this.numberInputId} className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n            name=\"number\"\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <>\n    <h3>Find contacts by name</h3>\n    <input value={value} onChange={onChangeFilter} />\n  </>\n);\nFilter.defaultProps = {\n  value: '',\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 30px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px;\n`;\n\nexport const StyledButton = styled.button`\n  margin-left: 26px;\n\n  :hover {\n    background: blue;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton } from './ContactList.styled';\n\nconst Contact = ({ name, number, onDeleteContactFor }) => (\n  <>\n    <span>{`${name}: ${number}`}</span>\n    <StyledButton type=\"button\" onClick={onDeleteContactFor}>\n      Delete\n    </StyledButton>\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContactFor: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = ({ items, onDeleteContact }) =>\n  items.length > 0 && (\n    <List>\n      {items.map(contact => (\n        <ListItem key={contact.id}>\n          <Contact\n            {...contact}\n            onDeleteContactFor={() => onDeleteContact(contact.id)}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport shortid from 'short-id';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleSubmitContact = contact => {\n    const contactToAdd = {\n      ...contact,\n      id: shortid.generate(),\n    };\n    const doubleContact = this.state.contacts.find(\n      c => c.name.toLowerCase() === contactToAdd.name.toLowerCase(),\n    );\n\n    if (doubleContact) {\n      alert(`${contact.name} is already in contacts.`);\n    } else if (contactToAdd.name && contactToAdd.number) {\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitContact={this.handleSubmitContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}